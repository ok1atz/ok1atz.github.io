blueprint:
  name: Link Multiple Switches and Lights - dvě tlačítka (upravený)
  description: >
    Link two switch buttons each controlling one target entity (light or switch).
    Synchronizuje stav tlačítek se stavem cílových entit.

  domain: automation
  homeassistant:
    min_version: 2022.5.0

  input:
    button_1:
      name: Tlačítko 1 (switch)
      selector:
        entity:
          domain: switch
    target_1:
      name: Ovládaná entita 1 (light nebo switch)
      selector:
        entity:
          domain:
            - light
            - switch

    button_2:
      name: Tlačítko 2 (switch)
      selector:
        entity:
          domain: switch
    target_2:
      name: Ovládaná entita 2 (light nebo switch)
      selector:
        entity:
          domain:
            - light
            - switch

variables:
  button_1: !input button_1
  target_1: !input target_1
  button_2: !input button_2
  target_2: !input target_2

trigger:
  - platform: state
    entity_id: !input button_1
  - platform: state
    entity_id: !input button_2

condition:
  - condition: template
    value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
  - condition: template
    value_template: >
      {{ (as_timestamp(trigger.to_state.last_changed) - as_timestamp(trigger.from_state.last_changed)) > 0.1 }}

action:
  - choose:
      - conditions:
          - condition: trigger
            entity_id: !input button_1
        sequence:
          - service: >
              {% if target_1.domain == 'light' %}
                light.turn_{{ trigger.to_state.state }}
              {% else %}
                switch.turn_{{ trigger.to_state.state }}
              {% endif %}
            target:
              entity_id: !input target_1

      - conditions:
          - condition: trigger
            entity_id: !input button_2
        sequence:
          - service: >
              {% if target_2.domain == 'light' %}
                light.turn_{{ trigger.to_state.state }}
              {% else %}
                switch.turn_{{ trigger.to_state.state }}
              {% endif %}
            target:
              entity_id: !input target_2

mode: queued
max_exceeded: silent
